{"version":3,"names":["withPlugins","AndroidConfig","createRunOncePlugin","pkg","require","withCredentialSharing","config","props","androidPermissions","android","usesPermissionName","push","ios","Permissions","withPermissions","name","version"],"sources":["withCredentialSharing.ts"],"sourcesContent":["import { \n    withPlugins,\n    AndroidConfig,\n    ConfigPlugin,\n    createRunOncePlugin\n} from '@expo/config-plugins';\n// eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment\nconst pkg = require('../../../package.json');\n\ntype Props = {\n  android?: {\n      usesPermissionName: string;\n      providerName: string;\n  },\n  ios?: {\n      accessGroupName: string;\n      otherValue: string;\n  }\n};\n\nconst withCredentialSharing: ConfigPlugin<Props> = (config, props = {}) => {\n  const androidPermissions = [];\n  if (props.android) {\n    if (props.android.usesPermissionName) {\n      androidPermissions.push(props.android.usesPermissionName)\n    }\n    // TODO: handle providerName\n  }\n  if (props.ios) {\n      // TODO: handle accessGroupName\n  }\n\n  return withPlugins(\n      config,\n      [\n        [AndroidConfig.Permissions.withPermissions, androidPermissions]\n      ]\n    );\n};\n\nexport default createRunOncePlugin(withCredentialSharing, pkg.name, pkg.version);"],"mappings":"AAAA,SACIA,WADJ,EAEIC,aAFJ,EAIIC,mBAJJ,QAKO,sBALP,C,CAMA;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AAaA,MAAMC,qBAA0C,GAAG,UAACC,MAAD,EAAwB;EAAA,IAAfC,KAAe,uEAAP,EAAO;EACzE,MAAMC,kBAAkB,GAAG,EAA3B;;EACA,IAAID,KAAK,CAACE,OAAV,EAAmB;IACjB,IAAIF,KAAK,CAACE,OAAN,CAAcC,kBAAlB,EAAsC;MACpCF,kBAAkB,CAACG,IAAnB,CAAwBJ,KAAK,CAACE,OAAN,CAAcC,kBAAtC;IACD,CAHgB,CAIjB;;EACD;;EACD,IAAIH,KAAK,CAACK,GAAV,EAAe,CACX;EACH;;EAED,OAAOZ,WAAW,CACdM,MADc,EAEd,CACE,CAACL,aAAa,CAACY,WAAd,CAA0BC,eAA3B,EAA4CN,kBAA5C,CADF,CAFc,CAAlB;AAMD,CAlBD;;AAoBA,eAAeN,mBAAmB,CAACG,qBAAD,EAAwBF,GAAG,CAACY,IAA5B,EAAkCZ,GAAG,CAACa,OAAtC,CAAlC"}